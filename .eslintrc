{
  "parser": "babel-eslint",

  "extends": [
    "airbnb",
    "plugin:cypress/recommended",
    "plugin:chai-friendly/recommended",
    // keep these prettier rules last
    "plugin:prettier/recommended",
    "prettier",
    "prettier/react"
  ],

  "plugins": [
    "prettier",
    "chai-friendly",
    "jest-dom",
    "formatjs",
    "testing-library"
  ],

  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module",
        "ecmaFeatures": {
          "jsx": true
        },
        "project": "./tsconfig.json",
        "tsconfigRootDir": "."
      },
      "plugins": ["@typescript-eslint"],
      "rules": {
        // TypeScript's `noFallthroughCasesInSwitch` option is more robust
        // https://github.com/facebook/create-react-app/issues/6906
        "default-case": "off",
        // 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/291)
        "no-dupe-class-members": "off",
        // 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/477)
        "no-undef": "off",
        // Add TypeScript specific rules (and turn off ESLint equivalents)
        "@typescript-eslint/consistent-type-assertions": "warn",
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "warn",
        "@typescript-eslint/no-namespace": "error",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
          "warn",
          {
            "functions": false,
            "classes": false,
            "variables": false,
            "typedefs": false
          }
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "args": "none",
            "ignoreRestSiblings": true
          }
        ],
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "warn"
      }
    }
  ],

  "rules": {
    "prettier/prettier": ["warn"],

    // Set to warn so build is not broken when using camelcase
    // camelcase is acceptable for attributes of api return values
    "camelcase": ["warn"],

    "react/jsx-filename-extension": [
      1,
      { "extensions": [".js", ".jsx", ".ts", ".tsx"] }
    ],
    "react/prop-types": [1, { "skipUndeclared": true }],
    "react/destructuring-assignment": 0,
    "react/jsx-props-no-spreading": 0,

    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],

    // We don't prefer default exports because named exports enhance IDE
    // auto completion for imports and prevent inconsistent naming conventions
    // across modules.
    "import/prefer-default-export": ["off"],

    // Import order is fixed for easier scanning of imports and to prevent
    // file changes from changed import order.
    //
    // This configuration separates sources specified in `groups` with newlines
    // and sorts moves imports from `~` into the `internal` group.
    "import/order": [
      "warn",
      {
        "alphabetize": { "order": "asc" },
        "groups": [
          "builtin",
          "external",
          ["sibling", "parent", "internal"],
          "index"
        ],
        "newlines-between": "always",
        "pathGroups": [
          { "pattern": "~/**", "group": "internal", "position": "before" }
        ]
      }
    ]
  },

  "env": {
    "browser": true,
    "jest": true
  },

  "settings": {
    "import/resolver": {
      "webpack": {
        "config": "./webpack/webpack.config.dev.js"
      }
    },
    "react": {
      "version": "detect"
    }
  },

  "globals": {
    "_paq": true
  }
}
